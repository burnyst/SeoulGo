<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/security 
                        http://www.springframework.org/schema/security/spring-security.xsd">
                        
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<beans:bean id="customLoginSuccess" class="com.seoulmate.seoulgo.security.CustomLoginSuccessHandler"/>
	<beans:bean id="userService" class="com.seoulmate.seoulgo.security.CustomUserDetailsService"/>
	<beans:bean id="userAuthProvider" class="com.seoulmate.seoulgo.security.CustomAuthenticationProvider"/>

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<intercept-url pattern="/plan/planwrite" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<!-- <intercept-url pattern="/review/writeReview" access="hasRole('ROLE_MEMBER')"/>  -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/notice/write" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/place/insert" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/place/update" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/place/delete" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		<form-login login-page="/user/login"
			login-processing-url="/login"
			default-target-url="/" 
			username-parameter="memberID"
			password-parameter="memberPW"
			always-use-default-target="true"
			authentication-success-handler-ref="customLoginSuccess"
			authentication-failure-url="/user/login?error=1" />
		
		<!-- 로그아웃 설정 -->
		<logout invalidate-session="true"
				delete-cookies="JSESSIONID"
				logout-url="/member/logout"
				logout-success-url="/"/>
		
		<!-- 세션 관련 설정 -->
		<!-- max-sessions="1": 최대 허용 가능 세션 수 -->
		<!-- expired-url: 중복 로그인이 일어났을 경우 이동 할 주소 -->
		<!-- error-if-maximum-exceeded: 기존에 로그인 된 ID로 다른 세션에서 두번째 로그인 시도하는 것을 불가능하게 처리  -->
		<session-management>
			<concurrency-control max-sessions="1"
								 expired-url="/user/loginForm"
								 error-if-maximum-exceeded="true"/>
		</session-management>
		
		<csrf disabled="true"/>
	</http>
	
	<authentication-manager>
        <authentication-provider ref="userAuthProvider"/>
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="bcryptPasswordEncoder"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>